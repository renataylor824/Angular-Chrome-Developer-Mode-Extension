name: Build And Release

on: [push, pull_request]

jobs:
  build:
    runs-on: windows-2019

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Restore the Nuget packages
      shell: cmd
      run: |
        "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe" -t:restore
        cd ChromeDevExtWarningPatcher
        "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe" -t:restore
        mklink /J packages ..\packages

    - name: Build with MSBuild
      shell: cmd
      run: |
        "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe" ChromeDevExtWarningPatcher.sln -p:Configuration=Release

    - uses: actions/upload-artifact@v2
      with:
        name: built-gui-binaries
        path: ChromeDevExtWarningPatcher/bin/Release/

    - uses: actions/upload-artifact@v2
      with:
        name: built-native-binaries
        path: x64/

    - name: Zip the builds
      shell: powershell
      run: |
        cd ChromeDevExtWarningPatcher\bin\Release;
        Compress-Archive -DestinationPath ChromeDevExtWarningPatcher.zip -Path ChromeDevExtWarningPatcher.exe,CommandLine.dll,Microsoft.Win32.TaskScheduler.dll;
        dir;

    - uses: "Ceiridge/action-automatic-releases@v1.0.0" # actually made by marvinpinto
      if: ${{ github.event_name == 'push' && endsWith(github.ref, '/master') }} # don't release on pull requests
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        automatic_release_tag: latest
        prerelease: true
        title: "Prerelease Build"
        files: |
          ChromeDevExtWarningPatcher/bin/Release/ChromeDevExtWarningPatcher.zip

    - name: Debug with SSH
      if: ${{ failure() }}
      run: curl -sL https://gist.githubusercontent.com/retyui/7115bb6acf151351a143ec8f96a7c561/raw/7099b9db76729dc5761da72aa8525f632d8875c9/debug-github-actions.sh | bash
      env:
        # After sign up on the https://ngrok.com/
        # You can find this token here: https://dashboard.ngrok.com/get-started/setup
        NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
        # This password you will use when authorizing via SSH 
        USER_PASS: ${{ secrets.SSH_USER_PASS }}
